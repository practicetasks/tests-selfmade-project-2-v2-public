import'dotenv/config';import fs from'fs';import path from'path';import{request}from'undici';import stylelint from'stylelint';import dirTree from'directory-tree';import{mkfile,mkdir,isDirectory}from'@hexlet/immutable-fs-trees';import*as csstree from'css-tree';import compareImages from'resemblejs/compareImages.js';import{getFileData}from'./utils.js';import{hasElementBySelectors,getStyle}from'./puppeteer.js';import stylelintConfig from'./config/stylelint.config.js';const checkStructure=a=>{const b=dirTree(a,{attributes:['type']}),c=mkdir('project',[mkfile('index.html'),mkdir('styles',[mkfile('style.css')]),mkdir('fonts',[mkfile('fonts.css')])]),d=(a,b)=>{const c=a.reduce((a,c)=>{const e=b.find(({name:a,type:b})=>c.name===a&&c.type===b);return e?isDirectory(c)&&e?[...a,...d(c.children,e.children)]:a:[...a,{id:`structure.${c.type}`,values:{name:c.name}}]},[]);return c};return d(c.children,b.children)},checkW3C=async a=>{const b=getFileData(a),c=path.basename(a),{body:d}=await request('https://validator.w3.org/nu/?out=json',{body:b,method:'POST',headers:{"content-type":'text/html; charset=utf-8',"user-agent":'Mozilla/5.0 (platform; rv:geckoversion) Gecko/geckotrail Firefox/firefoxversion'}}),e=await d.json(),f=e.messages.filter(a=>'error'===a.type).map(a=>({id:'w3c',values:{fileName:c,line:a.lastLine,message:a.message}}));return f},checkCSS=async a=>{const b=await stylelint.lint({config:stylelintConfig,files:`${a.split(path.sep).join(path.posix.sep)}**/*.css`// заменить на `${cssPath}**/*.css`
}),c=b.results.reduce((a,b)=>{const c=path.basename(b.source),d=b.warnings.map(a=>({id:`stylelint.${a.rule}`,values:{fileName:c,line:a.line,column:a.column,text:a.text}}));return a.concat(d)},[]);return c},checkOrderStylesheetLinks=async(a,b)=>{const c=b.map(a=>`link[href*="${a}"]`).join(' ~ '),d=await hasElementBySelectors(a,c);return d?[]:[{id:'orderStylesheetLinks'}]},checkAlternativeFonts=(a,b)=>{const c=[],d=getFileData(a),e=csstree.parse(d),f=csstree.findAll(e,a=>'Declaration'===a.type&&'font-family'===a.property),g=f.map(a=>csstree.generate(a)),h=g.filter(a=>!b.some(b=>a.includes(b)));return h.length&&c.push({id:'alternativeFonts',values:{fonts:b.join(', ')}}),c},checkSemanticTags=async(a,b)=>{const c=await Promise.all(b.map(async b=>{const c=await hasElementBySelectors(a,b);return{tagName:b,isMissing:!c}})),d=c.filter(({isMissing:a})=>a),e=d.map(({tagName:a})=>a);return e.length?[{id:'semanticTagsMissing',values:{tagNames:e.join(', ')}}]:[]},checkLang=async(a,b)=>{const c=await hasElementBySelectors(a,`html[lang*=${b}]`);return c?[]:[{id:'langAttrMissing',values:{lang:b}}]},checkTitleEmmet=async a=>{const b=await a.evaluate(()=>document.title);return'Document'===b?[{id:'titleEmmet'}]:[]},checkResetMargins=async(a,b)=>{const c=['margin','padding'],d=await Promise.all(b.map(async b=>{const d=await getStyle(a,b,c);return{tagName:b,isNotReset:d.some(a=>'0px'!==a)}})),e=d.filter(({isNotReset:a})=>a),f=e.map(({tagName:a})=>a);return f.length?[{id:'notResetMargins',values:{tagNames:f.join(', ')}}]:[]},checkLogoWrapper=async a=>{const b=await hasElementBySelectors(a,'a img[src*="logo"]');return b?[]:[{id:'logoWrapper'}]},checkPrefixForEmailAndPhone=async a=>{const b=await hasElementBySelectors(a,'a[href^="mailto"]'),c=await hasElementBySelectors(a,'a[href^="tel"]');return b&&c?[]:[{id:'prefixForEmailAndPhone'}]},checkLayout=async a=>{await a.screenshot({path:'layout.jpg',fullPage:!0});const b=await compareImages(fs.readFileSync('./layout-canonical.jpg'),fs.readFileSync('./layout.jpg'),{output:{errorColor:{red:255,green:0,blue:255},errorType:'movement',transparency:.3,largeImageThreshold:0,useCrossOrigin:!1,outputDiff:!0},scaleToSameSize:!1,ignore:'antialiasing'});return fs.writeFileSync('./output.jpg',b.getBuffer(!0)),10<b.misMatchPercentage?[{id:'layoutDifferent'}]:[]};export{checkStructure,checkW3C,checkCSS,checkOrderStylesheetLinks,checkAlternativeFonts,checkSemanticTags,checkLang,checkTitleEmmet,checkResetMargins,checkLogoWrapper,checkPrefixForEmailAndPhone,checkLayout};
